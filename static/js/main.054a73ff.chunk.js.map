{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","appData.js","components/ContactUs.js","App.js","serviceWorker.js","index.js"],"names":["Header","appData","this","props","Fragment","id","className","href","greetingMessage","style","color","fontFamily","roleDescription","socialLinks","map","item","key","name","url","target","rel","Component","About","panel","about","index","textAlign","fontSize","padding","question","answer","height","background","Resume","work","workId","achievements","Achievements","CompanyName","specialization","startDate","endDate","skillsDescription","skills","skillId","paddingRight","level","skillname","Porfolio","portfolio","porfolioKey","src","imgurl","alt","description","imagebaseurl","profilePicture","linkedinId","skypeid","address","website","education","UniversityName","MonthOfPassing","YearOfPassing","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.054a73ff.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nexport default class Header extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <React.Fragment>\n        <header id=\"home\">\n          <nav id=\"nav-wrap\">\n            <ul id=\"nav\" className=\"nav\">\n              <li className=\"current\">\n                <a className=\"smoothscroll\" href=\"#home\">\n                  Home\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#about\">\n                  About\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#resume\">\n                  Resume\n                </a>\n              </li>\n              <li>\n                <a className=\"smoothscroll\" href=\"#portfolio\">\n                  Works\n                </a>\n              </li>\n            </ul>\n          </nav>\n\n          <div className=\"row banner\">\n            <div className=\"banner-text\">\n              <h1 className=\"responsive-headline\">\n                {appData.greetingMessage}.\n              </h1>\n              <h2 style={{ color: \"#fff\", fontFamily: \"sans-serif \" }}>\n                {appData.roleDescription}\n              </h2>\n              <hr />\n              <ul className=\"social\">\n                {appData.socialLinks &&\n                  appData.socialLinks.map(item => {\n                    return (\n                      <li key={item.name}>\n                        <a\n                          href={item.url}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <i className={item.className}></i>\n                        </a>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n\n          <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\">\n              <i className=\"icon-down-circle\"></i>\n            </a>\n          </p>\n        </header>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class About extends Component {\n  render() {\n    let appData = this.props.appData;\n    let panel = appData.about.map((item, index) => {\n      let key = \"panel-\" + index;\n      return (\n        <div\n          className=\"console-panel\"\n          style={{\n            fontFamily: \"Monaco\",\n            textAlign: \"left\",\n            fontSize: \"15px\",\n            padding: \"0 0 20px 8px\"\n          }}\n          key={key}\n        >\n          <span style={{ color: \"white\" }}>> {item.question}</span>\n          <br />\n          <span style={{ padding: \"0 0 0 20px\" }}>=> {item.answer}</span>\n        </div>\n      );\n    });\n    return (\n      <section id=\"about\" style={{ padding: \"100px 80px 0 80px\" }}>\n        <h1> Hello World !!</h1>\n        <div className=\"main-col\">\n          <div\n            className=\"console-header\"\n            style={{ height: \"5%\", background: \"grey\", color: \"grey\" }}\n          >\n            terminal\n          </div>\n          <div className=\"console-body\" style={{ padding: \"20px\" }}>\n            {panel}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Resume extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <section id=\"resume\">\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Work</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {appData.work &&\n              appData.work.map((item, index) => {\n                let workId = \"work\" + index;\n                let achievements =\n                  item.Achievements &&\n                  item.Achievements.map((item, index) => {\n                    let key = \"achievement-\" + index;\n                    return <p key={key}> &bull; {item}</p>;\n                  });\n                return (\n                  <div className=\"row item\" key={workId}>\n                    <div className=\"twelve columns\">\n                      <h3>{item.CompanyName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>\n                        <em className=\"date\">\n                          {item.startDate} - {item.endDate}\n                        </em>\n                      </p>\n                      {achievements}\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n        <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Skills</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <p>{appData.skillsDescription}</p>\n\n            <div className=\"bars\">\n              <ul className=\"skills\">\n                {appData.skills &&\n                  appData.skills.map((item, index) => {\n                    let skillId = \"skill\" + index;\n                    return (\n                      <li key={skillId}>\n                        <span\n                          className=\"bar-expand\"\n                          style={{ paddingRight: item.level }}\n                        ></span>\n                        <em>{item.skillname}</em>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Porfolio extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Check Out Some of My Works.</h1>\n            <div\n              id=\"portfolio-wrapper\"\n              className=\"bgrid-quarters s-bgrid-thirds cf\"\n            >\n              {appData.portfolio &&\n                appData.portfolio.map((item, index) => {\n                  let porfolioKey = \"porfolio-\" + index;\n                  return (\n                    <div className=\"columns portfolio-item\" key={porfolioKey}>\n                      <div className=\"item-wrap\">\n                        <a href=\"#modal-01\">\n                          <img\n                            src={`${item.imgurl}`}\n                            className=\"item-img\"\n                            alt=\"item-img\"\n                          />\n                          <div className=\"overlay\">\n                            <div className=\"portfolio-item-meta\">\n                              <h5>{item.name}</h5>\n                              <p>{item.description}</p>\n                            </div>\n                          </div>\n                        </a>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","let appData = {\n  imagebaseurl: \"https://rbhatia46.github.io/\",\n  greetingMessage: \"Hi There!\",\n  profilePicture: \"images/profile-photo.jpg\",\n  linkedinId: \"dont have linkedin account yet\",\n  skypeid: \"skype?\",\n  roleDescription:\n    \"I'm Hien Le,  a Computer Science student at Carleton University\",\n  socialLinks: [\n    {\n      name: \"linkedin\",\n      url: \"https://www.linkedin.com/\",\n      className: \"fa fa-linkedin\"\n    },\n    {\n      name: \"github\",\n      url: \"http://github.com/quanghienle\",\n      className: \"fa fa-github\"\n    },\n    {\n      name: \"skype\",\n      url: \"http://twitter.com/\",\n      className: \"fa fa-twitter\"\n    }\n  ],\n  about: [\n    { question: \"HienLe.origin\", answer: '\"Cantho, Vietnam\"' },\n    { question: \"HienLe.education\", answer: '\"Carleton University\"' },\n    {\n      question: \"HienLe.major\",\n      answer: '\"Computer Science - Software Engineering Stream\"'\n    },\n    { question: \"HienLe.expectedGraduation\", answer: '\"August 2021\"' },\n    { question: \"HienLe.email\", answer: \"\\\"hienle@cmail.carleton.ca'\" },\n    {\n      question: \"HienLe.interests\",\n      answer: '[\"Code\", \"Badminton\", \"Guitar\", \"Movies\"]'\n    }\n  ],\n\n  address: \"Ottawa, Ontario, Canada \",\n  website: \"https://hienle.me\",\n  education: [\n    {\n      UniversityName: \"Carleton University\",\n      specialization: \"Computer Science - Software Engineering\",\n      MonthOfPassing: \"August\",\n      YearOfPassing: \"2021\",\n      Achievements: [1, 2]\n    }\n  ],\n  work: [\n    {\n      CompanyName: \"Carleton University\",\n      specialization: \"Teaching Assistant\",\n      startDate: \"Jan 2020\",\n      endDate: \"Current\",\n      Achievements: [1, 2]\n    },\n    {\n      CompanyName: \"Ericsson\",\n      specialization: \"Software Developer Co-op\",\n      startDate: \"May 2019\",\n      endDate: \"December 2019\",\n      Achievements: [1, 2]\n    }\n  ],\n  skillsDescription: \"*doing literally nothing*\",\n  skills: [\n    {\n      skillname: \"Java\",\n      level: \"80%\"\n    },\n    {\n      skillname: \"JavaScript / HTML / CSS\",\n      level: \"80%\"\n    },\n    {\n      skillname: \"Clojure / ClojureScript\",\n      level: \"75%\"\n    },\n    {\n      skillname: \"C/C++\",\n      level: \"50%\"\n    }\n  ],\n  portfolio: [\n    {\n      name: \"project1\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/phone.jpg\"\n    },\n    {\n      name: \"project2\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/project.jpg\"\n    },\n    {\n      name: \"project3\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/project2.png\"\n    },\n    {\n      name: \"project4\",\n      description: \"mobileapp\",\n      imgurl: \"images/portfolio/phone.jpg\"\n    }\n  ]\n};\n\nexport default appData;\n","import React, { Component } from \"react\";\nexport default class ContactUs extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <section id=\"contact\">\n        <div className=\"row section-head\">\n          <div className=\"ten columns\">\n            <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <aside className=\"eigth columns footer-widgets\">\n            <div className=\"widget\">\n              <h4>Linked in :{appData.linkedinId}</h4>\n            </div>\n          </aside>\n        </div>\n        <footer>\n          <div className=\"row\">\n            <div className=\"twelve columns\">\n              <ul className=\"social-links\">\n                {appData.socialLinks &&\n                  appData.socialLinks.map((item, index) => {\n                    let footerKey = \"footer-\" + index;\n                    return (\n                      <li key={footerKey}>\n                        <a href={item.url}>\n                          <i className={item.className} />\n                        </a>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n            <div id=\"go-top\">\n              <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n                <i className=\"icon-up-open\" />\n              </a>\n            </div>\n          </div>\n        </footer>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport About from \"./components/About\";\nimport Resume from \"./components/Resume\";\nimport Portfolio from \"./components/Portfolio\";\nimport ContactUs from \"./components/ContactUs\";\nimport appData from \"./appData\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header appData={appData} />\n        <About appData={appData} />\n        <Resume appData={appData} />\n        <Portfolio appData={appData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}