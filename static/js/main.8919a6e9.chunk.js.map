{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/ContactUs.js","appData.js","App.js","serviceWorker.js","index.js"],"names":["Header","appData","this","props","Fragment","id","className","href","greetingMessage","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","name","url","target","rel","Component","About","src","profilePicture","alt","aboutme","address","website","Resume","education","index","eduId","achievements","Achievements","UniversityName","specialization","MonthOfPassing","YearOfPassing","work","workId","CompanyName","startDate","endDate","Porfolio","skillsDescription","skills","skillId","skillname","toLowerCase","paddingRight","level","portfolio","porfolioKey","imgurl","description","ContactUs","linkedinId","footerKey","title","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8919a6e9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <React.Fragment>\n\n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <ul id=\"nav\" className=\"nav\">\n                <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n                <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n                <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n                <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n                <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">{appData.greetingMessage}.</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I am a {appData.role}.{appData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    appData.socialLinks && appData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n            <div className=\"three columns\">\n               <img className=\"profile-pic\"  src={appData.profilePicture} alt=\"\" />\n            </div>\n\n            <div className=\"nine columns main-col\">\n               <h2>About Me</h2>\n               <p> {appData.aboutme}</p>\n               <div className=\"row\">\n                  <div className=\"columns contact-details\">\n                    <h2>Contact Details</h2>\n                    <p className=\"address\">\n                        <span>{appData.name}</span>\n                            <br></br>\n                        <span>{appData.address}</span>\n                            <br></br>\n                        <span>{appData.website}</span>\n                    </p>\n                  </div>\n               </div>\n            </div>\n\n         </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <section id=\"resume\">\n\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                appData.education && appData.education.map((item, index)=>{\n                    let eduId = \"education\" + index;\n                    let achievements = item.Achievements && item.Achievements.map((item, index) => {\n                        let key = \"achievement-\" + index;\n                        return(<p key={key}> &bull; {item}</p>)\n                    });\n                    return(\n                        <div className=\"row item\" key={eduId}>\n                            <div className=\"twelve columns\">\n                                <h3>{item.UniversityName}</h3>\n                                <p className=\"info\">\n                                    {item.specialization}\n                                    <span>&bull;</span>\n                                    <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em>\n                                </p>\n                                {achievements}\n                            </div>\n                        </div>\n                    )})\n              }\n            </div>\n         </div>\n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                appData.work && appData.work.map((item, index) => {\n                    let workId = \"work\" + index;\n                    let achievements = item.Achievements && item.Achievements.map((item, index) => {\n                        let key = \"achievement-\" + index;\n                        return(<p key={key}> &bull; {item}</p>)\n                    });\n                  return(\n                    <div className=\"row item\" key={workId}>\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                              {item.specialization}\n                              <span>&bull;</span>\n                              <em className=\"date\">{item.startDate} - {item.endDate}</em></p>\n                           {achievements}\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div>\n         </div>\n\n\n\n\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row skill\">\n\n          <div className=\"three columns header-col\">\n            <h1><span>Skills</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n\n            <p>\n              {appData.skillsDescription}\n            </p>\n\n            <div className=\"bars\">\n\n              <ul className=\"skills\">\n                {\n                  appData.skills && appData.skills.map((item, index) => {\n                    let skillId = \"skill\" + index;\n                    return(\n                        <li key={skillId}>\n                          <span className={`bar-expand ${item.skillname.toLowerCase()}`} style={{paddingRight: item.level}}>\n\n                          </span><em>{item.skillname}</em>\n                        </li>\n                    )\n                  })\n                }\n\n              </ul>\n\n            </div>\n\n          </div>\n\n        </div>\n\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Works.</h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            appData.portfolio && appData.portfolio.map((item, index)=>{\n              let porfolioKey = \"porfolio-\" + index;\n              return(\n                <div className=\"columns portfolio-item\" key={porfolioKey}>\n                  <div className=\"item-wrap\">\n                    <a href=\"#modal-01\">\n                      <img src={`${item.imgurl}`} className=\"item-img\" alt=\"item-img\"/>\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <h5>{item.name}</h5>\n                          <p>{item.description}</p>\n                        </div>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}\n","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>Linked in :\n                  {appData.linkedinId}\n                </h4>\n              </div>\n            </aside>\n          </div>\n          <footer>\n              <div className=\"row\">\n                  <div className=\"twelve columns\">\n                      <ul className=\"social-links\">\n                          {\n                              appData.socialLinks && appData.socialLinks.map((item, index)=>{\n                                  let footerKey = \"footer-\" + index;\n                                  return(\n                                      <li key={footerKey}>\n                                          <a href={item.url}>\n                                              <i className={item.className}/>\n                                          </a>\n                                      </li>\n                                  )\n                              })\n                          }\n                      </ul>\n\n                  </div>\n                  <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n              </div>\n          </footer>\n        </section>\n        );\n  }\n}\n","let appData = {\n    \"imagebaseurl\":\"https://rbhatia46.github.io/\",\n    \"greetingMessage\": \"Hi! I'm Hien Le\",\n    \"profilePicture\": \"images/profile-photo.jpg\",\n    \"role\": \"Software Developer\",\n    \"linkedinId\":\"dont have linkedin account yet\",\n    \"skypeid\": \"skype?\",\n    \"roleDescription\": \" I like dabbling in various parts of frontend development and like to learn about new technologies, write technical articles or simply play games in my free time.\",\n    \"socialLinks\":[\n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"http://github.com/quanghienle\",\n          \"className\":\"fa fa-github\"\n        },\n        {\n          \"name\":\"skype\",\n          \"url\":\"http://twitter.com/\",\n          \"className\":\"fa fa-twitter\"\n        }\n      ],\n    \"aboutme\":\"I am currently in my final year studying Computer Science at Carleton University. \" +\n                \"I am a self taught Full Stack Web Developer, currently diving deeper into Web Development and Machine Learning. \",\n\n    \"address\":\"Ottawa, Ontario, Canada \",\n    \"website\":\"https://hienle.me\",\n    \"education\":[\n      {\n        \"UniversityName\": \"Carleton University\",\n        \"specialization\": \"Computer Science - Software Engineering\",\n        \"MonthOfPassing\": \"August\",\n        \"YearOfPassing\": \"2021\",\n        \"Achievements\": [1, 2]\n      }\n    ],\n    \"work\":[\n        {\n            \"CompanyName\":\"Carleton University\",\n            \"specialization\":\"Teaching Assistant\",\n            \"startDate\":\"Jan 2020\",\n            \"endDate\":\"Current\",\n            \"Achievements\": [1, 2]\n        },\n      {\n        \"CompanyName\":\"Ericsson\",\n        \"specialization\":\"Software Developer Co-op\",\n        \"startDate\":\"May 2019\",\n        \"endDate\":\"December 2019\",\n        \"Achievements\": [1, 2]\n      }\n    ],\n    \"skillsDescription\":\"Your skills here\",\n    \"skills\":[\n      {\n        \"skillname\":\"Java\",\n          \"level\": \"80%\"\n      },\n      {\n        \"skillname\":\"JavaScript/HTML/CSS\",\n          \"level\": \"80%\"\n      },\n        {\n            \"skillname\":\"Clojure/ClojureScript\",\n            \"level\": \"75%\"\n        },\n      {\n        \"skillname\":\"C/C++\",\n          \"level\": \"50%\"\n      }\n    ],\n    \"portfolio\":[\n      {\n        \"name\":\"project1\",\n        \"description\":\"mobileapp\",\n        \"imgurl\":\"images/portfolio/phone.jpg\"\n      },\n      {\n        \"name\":\"project2\",\n        \"description\":\"mobileapp\",\n        \"imgurl\":\"images/portfolio/project.jpg\"\n      },\n      {\n        \"name\":\"project3\",\n        \"description\":\"mobileapp\",\n        \"imgurl\":\"images/portfolio/project2.png\"\n      },\n      {\n        \"name\":\"project4\",\n        \"description\":\"mobileapp\",\n        \"imgurl\":\"images/portfolio/phone.jpg\"\n      }\n    ]\n  };\n\n  export default appData\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport ContactUs from './components/ContactUs';\n// import Footer from './components/Footer';\nimport appData from './appData';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header appData={appData}/>\n                <About appData={appData}/>\n                <Resume appData={appData}/>\n                <Portfolio appData={appData}/>\n                <ContactUs appData={appData}/>\n                {/*<Footer appData={appData}/>*/}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}