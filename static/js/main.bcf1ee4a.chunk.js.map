{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","appData.js","components/ContactUs.js","App.js","serviceWorker.js","index.js"],"names":["Header","appData","this","props","Fragment","id","className","href","greetingMessage","style","color","fontFamily","roleDescription","socialLinks","map","item","key","name","url","target","rel","Component","About","panel","about","index","textAlign","fontSize","padding","question","answer","height","background","Resume","work","workId","achievements","Achievements","CompanyName","specialization","startDate","endDate","skillsDescription","skills","skillId","paddingRight","level","skillname","Porfolio","portfolio","porfolioKey","src","imgurl","alt","description","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bcf1ee4a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <React.Fragment>\n\n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <ul id=\"nav\" className=\"nav\">\n                <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n                <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n                <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n                <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">{appData.greetingMessage}.</h1>\n               <h2 style={{color:'#fff', fontFamily:'sans-serif '}}>{appData.roleDescription}</h2>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    appData.socialLinks && appData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let appData = this.props.appData;\n    let panel = appData.about.map((item, index) => {\n        let key = \"panel-\" + index;\n       return(\n           <div className=\"console-panel\" style={{fontFamily: 'Monaco',\n               textAlign: \"left\",\n               fontSize: \"15px\",\n                padding: \"0 0 20px 8px\"}}\n                key={key}>\n               <span  style={{color: \"white\"}}>\n                   > {item.question}\n               </span>\n               <br />\n               <span  style={{padding: \"0 0 0 20px\"}}>\n                   => {item.answer}\n               </span>\n           </div>\n       )\n    });\n    return (\n      <section id=\"about\" style={{padding: \"100px 80px 0 80px\"}}>\n          <h1> Hello World !!</h1>\n          <div className=\"main-col\">\n              <div className=\"console-header\" style={{height: \"5%\", background: \"grey\", color: \"grey\"}}>\n                  terminal\n              </div>\n              <div className=\"console-body\" style={{padding: \"20px\"}}>\n                  {panel}\n              </div>\n          </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <section id=\"resume\">\n\n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                appData.work && appData.work.map((item, index) => {\n                    let workId = \"work\" + index;\n                    let achievements = item.Achievements && item.Achievements.map((item, index) => {\n                        let key = \"achievement-\" + index;\n                        return(<p key={key}> &bull; {item}</p>)\n                    });\n                  return(\n                    <div className=\"row item\" key={workId}>\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                              {item.specialization}\n                              <span>&bull;</span>\n                              <em className=\"date\">{item.startDate} - {item.endDate}</em></p>\n                           {achievements}\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div>\n         </div>\n          <div className=\"row skill\">\n\n              <div className=\"three columns header-col\">\n                  <h1><span>Skills</span></h1>\n              </div>\n\n              <div className=\"nine columns main-col\">\n\n                  <p>\n                      {appData.skillsDescription}\n                  </p>\n\n                  <div className=\"bars\">\n\n                      <ul className=\"skills\">\n                          {\n                              appData.skills && appData.skills.map((item, index) => {\n                                  let skillId = \"skill\" + index;\n                                  return(\n                                      <li key={skillId}>\n                          <span className=\"bar-expand\" style={{paddingRight: item.level}}>\n\n                          </span><em>{item.skillname}</em>\n                                      </li>\n                                  )\n                              })\n                          }\n\n                      </ul>\n\n                  </div>\n\n              </div>\n\n          </div>\n\n\n\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <section id=\"portfolio\">\n\n\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Works.</h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            appData.portfolio && appData.portfolio.map((item, index)=>{\n              let porfolioKey = \"porfolio-\" + index;\n              return(\n                <div className=\"columns portfolio-item\" key={porfolioKey}>\n                  <div className=\"item-wrap\">\n                    <a href=\"#modal-01\">\n                      <img src={`${item.imgurl}`} className=\"item-img\" alt=\"item-img\"/>\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <h5>{item.name}</h5>\n                          <p>{item.description}</p>\n                        </div>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}\n","let appData = {\n    \"imagebaseurl\": \"https://rbhatia46.github.io/\",\n    \"greetingMessage\": \"Hi There!\",\n    \"profilePicture\": \"images/profile-photo.jpg\",\n    \"linkedinId\": \"dont have linkedin account yet\",\n    \"skypeid\": \"skype?\",\n    \"roleDescription\": \"I'm Hien Le,  a Computer Science student at Carleton University\",\n    \"socialLinks\": [{\n        \"name\": \"linkedin\",\n        \"url\": \"https://www.linkedin.com/\",\n        \"className\": \"fa fa-linkedin\"\n    },\n        {\n            \"name\": \"github\",\n            \"url\": \"http://github.com/quanghienle\",\n            \"className\": \"fa fa-github\"\n        },\n        {\n            \"name\": \"skype\",\n            \"url\": \"http://twitter.com/\",\n            \"className\": \"fa fa-twitter\"\n        }\n    ],\n    \"about\": [\n        {\"question\": \"HienLe.origin\",\n            \"answer\": \"\\\"Cantho, Vietnam\\\"\"},\n        {\"question\": \"HienLe.education\",\n        \"answer\": \"\\\"Carleton University\\\"\"},\n        {\"question\": \"HienLe.major\",\n            \"answer\": \"\\\"Computer Science - Software Engineering Stream\\\"\"},\n        {\"question\": \"HienLe.expectedGraduation\",\n            \"answer\": \"\\\"August 2021\\\"\"},\n        {\"question\": \"HienLe.email\",\n            \"answer\": \"\\\"hienle@cmail.carleton.ca\\'\"},\n        {\"question\": \"HienLe.interests\",\n            \"answer\": \"[\\\"Code\\\", \\\"Badminton\\\", \\\"Guitar\\\", \\\"Movies\\\"]\"},\n    ],\n\n    \"address\": \"Ottawa, Ontario, Canada \",\n    \"website\": \"https://hienle.me\",\n    \"education\": [{\n        \"UniversityName\": \"Carleton University\",\n        \"specialization\": \"Computer Science - Software Engineering\",\n        \"MonthOfPassing\": \"August\",\n        \"YearOfPassing\": \"2021\",\n        \"Achievements\": [1, 2]\n    }],\n    \"work\": [{\n        \"CompanyName\": \"Carleton University\",\n        \"specialization\": \"Teaching Assistant\",\n        \"startDate\": \"Jan 2020\",\n        \"endDate\": \"Current\",\n        \"Achievements\": [1, 2]\n    },\n        {\n            \"CompanyName\": \"Ericsson\",\n            \"specialization\": \"Software Developer Co-op\",\n            \"startDate\": \"May 2019\",\n            \"endDate\": \"December 2019\",\n            \"Achievements\": [1, 2]\n        }\n    ],\n    \"skillsDescription\": \"*doing literally nothing*\",\n    \"skills\": [{\n        \"skillname\": \"Java\",\n        \"level\": \"80%\"\n    },\n        {\n            \"skillname\": \"JavaScript / HTML / CSS\",\n            \"level\": \"80%\"\n        },\n        {\n            \"skillname\": \"Clojure / ClojureScript\",\n            \"level\": \"75%\"\n        },\n        {\n            \"skillname\": \"C/C++\",\n            \"level\": \"50%\"\n        }\n    ],\n    \"portfolio\": [{\n        \"name\": \"project1\",\n        \"description\": \"mobileapp\",\n        \"imgurl\": \"images/portfolio/phone.jpg\"\n    },\n        {\n            \"name\": \"project2\",\n            \"description\": \"mobileapp\",\n            \"imgurl\": \"images/portfolio/project.jpg\"\n        },\n        {\n            \"name\": \"project3\",\n            \"description\": \"mobileapp\",\n            \"imgurl\": \"images/portfolio/project2.png\"\n        },\n        {\n            \"name\": \"project4\",\n            \"description\": \"mobileapp\",\n            \"imgurl\": \"images/portfolio/phone.jpg\"\n        }\n    ]\n};\n\n  export default appData\n","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let appData = this.props.appData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>Linked in :\n                  {appData.linkedinId}\n                </h4>\n              </div>\n            </aside>\n          </div>\n          <footer>\n              <div className=\"row\">\n                  <div className=\"twelve columns\">\n                      <ul className=\"social-links\">\n                          {\n                              appData.socialLinks && appData.socialLinks.map((item, index)=>{\n                                  let footerKey = \"footer-\" + index;\n                                  return(\n                                      <li key={footerKey}>\n                                          <a href={item.url}>\n                                              <i className={item.className}/>\n                                          </a>\n                                      </li>\n                                  )\n                              })\n                          }\n                      </ul>\n\n                  </div>\n                  <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n              </div>\n          </footer>\n        </section>\n        );\n  }\n}\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport ContactUs from './components/ContactUs';\nimport appData from './appData';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header appData={appData}/>\n                <About appData={appData}/>\n                <Resume appData={appData}/>\n                <Portfolio appData={appData}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}