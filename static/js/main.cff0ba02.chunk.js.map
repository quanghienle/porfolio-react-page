{"version":3,"sources":["assets/images/logo.svg","components/Flex/Flex.js","components/Flex/FlexItem.js","components/Header/Header.js","components/NavBar/NavBar.js","components/NavBar/NavBarItem.js","components/SideBar/SideBar.js","components/Main/Main.js","components/Section/HomeSection.js","components/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Flex","this","props","direction","wrap","justifyContent","style","children","flexDirection","flexWrap","className","Component","FlexItem","grow","shrink","basis","align","flexGrow","flexShrink","flexBasis","alignSelf","Header","state","header1","paragraph","height","background","src","logo","alt","textAlign","NavBar","NavBarItem","href","link","name","SideBar","Main","HomeSection","id","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cff0ba02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport './Flex.css'\n\nclass Flex extends Component {\n    render(){\n        const { direction, wrap, justifyContent, style = {}, children } = this.props;\n        style.flexDirection = direction;\n        style.flexWrap = wrap;\n        style.justifyContent = justifyContent;\n\n        return (\n            <div className=\"Flex\" style={style}>\n                {children}\n            </div>\n        )\n    }\n}\n\nexport default Flex;\n","import React, { Component } from 'react'\nimport './FlexItem.css'\n\nclass FlexItem extends Component {\n    render(){\n        const { grow, shrink, basis, align, style = {}, children } = this.props;\n        style.flexGrow = grow;\n        style.flexShrink = shrink;\n        style.flexBasis = basis;\n        style.alignSelf = align;\n\n        return (\n            <div className=\"FlexItem\"\n                 style={style}>\n                {children}\n            </div>\n        )\n    }\n}\n\nexport default FlexItem;\n","import React, { Component } from 'react'\nimport './Header.css'\nimport logo from \"../../assets/images/logo.svg\";\nimport Flex from \"../Flex/Flex\";\nimport FlexItem from \"../Flex/FlexItem\";\n\n\nclass Header extends Component {\n    state = {\n        header1: \"Welcome to my page !!\",\n        paragraph: \"this page is still WIP\"\n    };\n\n    render(){\n        return (\n            <Flex style={{height: \"200px\", background: \"#aaa\"}}>\n                <FlexItem basis=\"150px\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </FlexItem>\n                <FlexItem grow=\"1\" shrink=\"1\" style={{textAlign: \"left\"}}>\n                    <h1>{ this.state.header1 }</h1>\n                    <p>{ this.state.paragraph }</p>\n                </FlexItem>\n            </Flex>\n        )\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react'\nimport './NavBar.css'\n\nclass NavBar extends Component {\n    render(){\n        return (\n            <div className=\"NavBar\">\n                <ul> { this.props.children } </ul>\n            </div>\n        )\n    }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react'\nimport './NavBarItem.css'\n\nclass NavBarItem extends Component {\n    render(){\n        return (\n            <li className=\"NavBarItem\">\n                <a href={ this.props.link }>\n                    { this.props.name }\n                </a>\n            </li>\n        )\n    }\n}\n\nexport default NavBarItem;\n","import React, { Component } from 'react'\nimport './SideBar.css'\n\nclass SideBar extends Component {\n    render(){\n        return (\n                <div className=\"side\">\n                    <h2>About Me</h2>\n                    <h5>Photo of me:</h5>\n                    <div className=\"fakeimg\" style={{height: '200px'}}>Image</div>\n                    <p>Some text about me ...</p>\n                    <h3>More Text</h3>\n                    <p>Omae wa mou shindeiru</p>\n                    <div className=\"fakeimg\" style={{height: '60px'}}>Image</div><br />\n                    <div className=\"fakeimg\" style={{height: '60px'}}>Image</div><br />\n                    <div className=\"fakeimg\" style={{height: '60px'}}>Image</div>\n                </div>\n        )\n    }\n}\n\nexport default SideBar;\n","import React, { Component } from 'react'\nimport './Main.css'\n\nclass Main extends Component {\n    render(){\n        return (\n                <div className=\"main\">\n                    <h2>SOME HEADING</h2>\n                    <h5>SOME description</h5>\n                    <div className=\"fakeimg\" style={{height: '200px'}}>Image</div>\n                    <p>Some text..</p>\n                    <br />\n                    <h2>TITLE HEADING</h2>\n                    <h5>Title description</h5>\n                    <div className=\"fakeimg\" style={{height: '200px'}}>Image</div>\n                    <p>Some text..</p>\n                    <div className=\"fakeimg\" style={{height: '200px'}}>Image</div>\n                    <h2>TITLE HEADING</h2>\n                    <h5>Title description</h5>\n                    <div className=\"fakeimg\" style={{height: '200px'}}>Image</div>\n                </div>\n        )\n    }\n}\n\nexport default Main;\n","import React, { Component } from 'react'\nimport Flex from \"../Flex/Flex\";\nimport FlexItem from \"../Flex/FlexItem\";\nimport SideBar from \"../SideBar/SideBar\";\nimport Main from \"../Main/Main\";\n\nclass HomeSection extends Component {\n    render(){\n        return (\n            <div className=\"Home\" id=\"home\">\n                <Flex>\n                    <FlexItem basis=\"300px\" align=\"top\">\n                        <SideBar />\n                    </FlexItem>\n                    <FlexItem grow=\"1\" shrink=\"1\">\n                        <Main />\n                    </FlexItem>\n                </Flex>\n            </div>\n        )\n    }\n}\n\nexport default HomeSection;\n","import React from 'react';\nimport './App.css';\nimport Header from '../Header/Header';\nimport NavBar from \"../NavBar/NavBar\";\nimport NavBarItem from \"../NavBar/NavBarItem\";\nimport HomeSection from \"../Section/HomeSection\"\nimport Flex from \"../Flex/Flex\";\nimport FlexItem from \"../Flex/FlexItem\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <NavBar>\n                <NavBarItem name=\"Home\" link=\"#home\"/>\n                <NavBarItem name=\"About\" link=\"#about\"/>\n                <NavBarItem name=\"Porfolio\" link=\"#porfolio\"/>\n                <NavBarItem name=\"Contact\" link=\"#contact\"/>\n            </NavBar>\n            <HomeSection />\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}